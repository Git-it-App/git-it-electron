{
  "Connect your local repository to a remote one and push changes to it.": "Connect your local repository to a remote one and push changes to it.",
  "Remotes": "Remotes",
  "When you put something on GitHub that copy lives on one of GitHub's servers. This makes it a {/str/}remote{/str_e/} repository because it is not on your computer, but on a server, {/dqm/}remote{/dqm/} and somewhere else. By {/str/}pushing{/str_e/} your {/str/}local{/str_e/} (on your computer) changes to it, you keep it up to date.": "When you put something on GitHub that copy lives on one of GitHub's servers. This makes it a {/str/}remote{/str_e/} repository because it is not on your computer, but on a server, {/dqm/}remote{/dqm/} and somewhere else. By {/str/}pushing{/str_e/} your {/str/}local{/str_e/} (on your computer) changes to it, you keep it up to date.",
  "Others can always then get the latest from your project by {/str/}pulling{/str_e/} your changes down from the remote (and onto their computer). This is how everyone can work on a project together without needing access to your computer where your local copy is stored.": "Others can always then get the latest from your project by {/str/}pulling{/str_e/} your changes down from the remote (and onto their computer). This is how everyone can work on a project together without needing access to your computer where your local copy is stored.",
  "The illustration shows a server (e.g. by GitHub), holding the {/str/}remote{/str_e/} repository and two computers, each of them holding a {/str/}local{/str_e/} copy of the repository. You can either access and edit the remote repository with your browser or edit the repository locally and tell your computer (on {/str/}terminal{/str_e/}) to talk to the server.": "The illustration shows a server (e.g. by GitHub), holding the {/str/}remote{/str_e/} repository and two computers, each of them holding a {/str/}local{/str_e/} copy of the repository. You can either access and edit the remote repository with your browser or edit the repository locally and tell your computer (on {/str/}terminal{/str_e/}) to talk to the server.",
  "Create a Remote Repository": "Create a Remote Repository",
  "You want to sync your {/str/}local{/str_e/} version with one stored on GitHub.com. First create a new {/str/}remote{/str_e/} repository on GitHub.com.": "You want to sync your {/str/}local{/str_e/} version with one stored on GitHub.com. First create a new {/str/}remote{/str_e/} repository on GitHub.com.",
  "Go to {/lnk_github/}github.com{/lnk_e/}, log in, and click the '+' in the top right and then click 'New repository'.": "Go to {/lnk_github/}github.com{/lnk_e/}, log in, and click the '+' in the top right and then click 'New repository'.",
  "Give it a name that matches your local repository's name, 'hello-world', and a short description.": "Give it a name that matches your local repository's name, 'hello-world', and a short description.",
  "Make it public. This means it'll be listed on your public profile.": "Make it public. This means it'll be listed on your public profile.",
  "Don't initialize with a README because we already have a file, locally, named 'readme.txt'. This is a helper option from GitHub if you hadn't already made it.": "Don't initialize with a README because we already have a file, locally, named 'readme.txt'. This is a helper option from GitHub if you hadn't already made it.",
  "Don't initialize with '.gitignore' or a license, we won't use them in this tutorial.": "Don't initialize with '.gitignore' or a license, we won't use them in this tutorial.",
  "Click create repository!": "Click create repository!",
  "Readmes, .gitignores and Licenses": "Readmes, .gitignores and Licenses",
  "These are common files in open source projects so to make starting a new project easier, GitHub provides an option for creating them for you.": "These are common files in open source projects so to make starting a new project easier, GitHub provides an option for creating them for you.",
  "A {/str/}readme{/str_e/} explains what the project is, how to use it, and often times, how to contribute (though sometimes there is an extra file, 'CONTRIBUTING.md', for those details).": "A {/str/}readme{/str_e/} explains what the project is, how to use it, and often times, how to contribute (though sometimes there is an extra file, 'CONTRIBUTING.md', for those details).",
  "A {/str/}.gitignore{/str_e/} is a list of files that Git should {/em/}not{/em_e/} track, for instance, files with passwords!": "A {/str/}.gitignore{/str_e/} is a list of files that Git should {/em/}not{/em_e/} track, for instance, files with passwords!",
  "A {/str/}license{/str_e/} file is the type of license you put on your project. This lets others know how they can use it. Information on the types is here: {/lnk_license/}choosealicense.com{/lnk_e/}.": "A {/str/}license{/str_e/} file is the type of license you put on your project. This lets others know how they can use it. Information on the types is here: {/lnk_license/}choosealicense.com{/lnk_e/}.",
  "Connect your Local to your Remote": "Connect your Local to your Remote",
  "Now you've got an empty repository started on GitHub.com. At the top you'll see 'Quick Setup', make sure the 'HTTPS' button is selected and copy the address—this is the address of your repository on GitHub's servers.": "Now you've got an empty repository started on GitHub.com. At the top you'll see 'Quick Setup', make sure the 'HTTPS' button is selected and copy the address—this is the address of your repository on GitHub's servers.",
  "Back in your terminal, and inside of the 'hello-world' folder that you initialized as a Git repository in the earlier challenge, you want to tell Git to remember the address of the remote version on GitHub's servers. You can have multiple remotes so each requires a name. The primary remote is typically named {/cde/}origin{/cde_e/}.": "Back in your terminal, and inside of the 'hello-world' folder that you initialized as a Git repository in the earlier challenge, you want to tell Git to remember the address of the remote version on GitHub's servers. You can have multiple remotes so each requires a name. The primary remote is typically named {/cde/}origin{/cde_e/}.",
  "To add a remote named 'origin' to your repository:": "To add a remote named 'origin' to your repository:",
  "Your {/str/}local{/str_e/} repository now knows where your {/str/}remote{/str_e/} repository, named 'origin', lives on GitHub's servers. Think of it as adding a name and address on speed dial—now when you need to send something there, you can.": "Your {/str/}local{/str_e/} repository now knows where your {/str/}remote{/str_e/} repository, named 'origin', lives on GitHub's servers. Think of it as adding a name and address on speed dial—now when you need to send something there, you can.",
  "Windows Users:": "Windows Users:",
  "If you have {/str/}GitHub Desktop{/str_e/} on your computer, a remote named 'origin' is automatically created in your local repository. In that case, you'll just need to tell it what URL to associate with 'origin'. Use this command instead of the 'add' one above:": "If you have {/str/}GitHub Desktop{/str_e/} on your computer, a remote named 'origin' is automatically created in your local repository. In that case, you'll just need to tell it what URL to associate with 'origin'. Use this command instead of the 'add' one above:",
  "Personal Access Tokens": "Personal Access Tokens",
  "On the next step you will need to authenticate yourself towards GitHub. GitHub does not accept simple passwords for this, but requires to use a {/str/}Personal Access Token (PAT){/str_e/}. This might feel a bit cumbersome but is meant to be a security feature. Access-tokens are like strong passwords that can be scoped, be set to expire or also just be deactivated manually once compromised.": "On the next step you will need to authenticate yourself towards GitHub. GitHub does not accept simple passwords for this, but requires to use a {/str/}Personal Access Token (PAT){/str_e/}. This might feel a bit cumbersome but is meant to be a security feature. Access-tokens are like strong passwords that can be scoped, be set to expire or also just be deactivated manually once compromised.",
  "Depending on your git installation there might be alternative methods for authentication available (e.g. via Browser). If not, you will need to create a PAT and use this one as your password, when prompted.": "Depending on your git installation there might be alternative methods for authentication available (e.g. via Browser). If not, you will need to create a PAT and use this one as your password, when prompted.",
  "To generate a new Personal Access Token:": "To generate a new Personal Access Token:",
  "Open {/lnk_pat/}Github - Personal access tokens{/lnk_e/} and click on 'Generate new token'.": "Open {/lnk_pat/}Github - Personal access tokens{/lnk_e/} and click on 'Generate new token'.",
  "Add a note to identify your token.": "Add a note to identify your token.",
  "Best set some expiration.": "Best set some expiration.",
  "Select the scope {/cde/}public_repo{/cde_e/}. This suffices for what we will be doing here.": "Select the scope {/cde/}public_repo{/cde_e/}. This suffices for what we will be doing here.",
  "Generate the token, then copy and store it in a safe location. Keep in mind it should be handled like a password.": "Generate the token, then copy and store it in a safe location. Keep in mind it should be handled like a password.",
  "Use it when beeing asked for a password.": "Use it when beeing asked for a password.",
  "Push Work to your Remote": "Push Work to your Remote",
  "Next you want to {/str/}push{/str_e/} (send) everything you've done locally to your remote repository on GitHub. This is something you'll do often so that your remote version is up to date and matching the state of your local version.": "Next you want to {/str/}push{/str_e/} (send) everything you've done locally to your remote repository on GitHub. This is something you'll do often so that your remote version is up to date and matching the state of your local version.",
  "Git has a branching system so that you can work on different parts of a project at different times. We'll learn more about that later, but by default the first branch is named 'master'. When you push (and later pull) from a project, you tell Git the {/str/}branch name{/str_e/} you want and the name of the {/str/}remote{/str_e/} that it lives on.": "Git has a branching system so that you can work on different parts of a project at different times. We'll learn more about that later, but by default the first branch is named 'master'. When you push (and later pull) from a project, you tell Git the {/str/}branch name{/str_e/} you want and the name of the {/str/}remote{/str_e/} that it lives on.",
  "In this case, we'll send our branch named 'master' to our remote on GitHub named 'origin'.": "In this case, we'll send our branch named 'master' to our remote on GitHub named 'origin'.",
  "Now go to your remote repository's page on GitHub.com and refresh the page. {/str/}Wow!{/str_e/} Everything is now the same locally as it is remotely. Congrats on your first public repository!": "Now go to your remote repository's page on GitHub.com and refresh the page. {/str/}Wow!{/str_e/} Everything is now the same locally as it is remotely. Congrats on your first public repository!",
  "Add remote connections": "Add remote connections",
  "Set a URL to a remote": "Set a URL to a remote",
  "Pull in changes": "Pull in changes",
  "View remote addresses": "View remote addresses",
  "Push changes": "Push changes"
}
