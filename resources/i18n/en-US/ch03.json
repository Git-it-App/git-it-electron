{
  "Create a file in your new repository, add something to that file and commit that change with Git.": "Create a file in your new repository, add something to that file and commit that change with Git.",
  "Commits": "Commits",
  "Commits are core to using Git. They are the moments in which you save and describe the work you've done. They are the ticks in the timeline of your project's history.": "Commits are core to using Git. They are the moments in which you save and describe the work you've done. They are the ticks in the timeline of your project's history.",
  "Create a New File": "Create a New File",
  "Now that you've got a repository started let's add a file to it.": "Now that you've got a repository started let's add a file to it.",
  "Open your text editor and create a new empty file. Now write a little bit of text, perhaps type {/dqm/}Hello!{/dqm/}, and save the file as 'readme.txt' in the 'hello-world' folder you created in the last challenge.": "Open your text editor and create a new empty file. Now write a little bit of text, perhaps type {/dqm/}Hello!{/dqm/}, and save the file as 'readme.txt' in the 'hello-world' folder you created in the last challenge.",
  "Check Status + Add and Commit Changes": "Check Status + Add and Commit Changes",
  "Next check the {/str/}status{/str_e/} of your repository to find out if there have been changes. You know you have changed something, but does Git?": "Next check the {/str/}status{/str_e/} of your repository to find out if there have been changes. You know you have changed something, but does Git?",
  "Make sure you're still within your 'hello-world' directory when you're running these commands. Use Git to see what changed in your repository:": "Make sure you're still within your 'hello-world' directory when you're running these commands. Use Git to see what changed in your repository:",
  "First, check the status:": "First, check the status:",
  "Git should tell you that a file has been added.": "Git should tell you that a file has been added.",
  "Then {/str/}add{/str_e/} the file you just created so that it becomes a part of the changes you will {/str/}commit{/str_e/} (aka save) with Git:": "Then {/str/}add{/str_e/} the file you just created so that it becomes a part of the changes you will {/str/}commit{/str_e/} (aka save) with Git:",
  "Finally, {/str/}commit{/str_e/} those changes to the repository's history with a short (m) message describing the updates.": "Finally, {/str/}commit{/str_e/} those changes to the repository's history with a short (m) message describing the updates.",
  "Step: Make More Changes": "Step: Make More Changes",
  "Now add another line to 'readme.txt' and save the file again.": "Now add another line to 'readme.txt' and save the file again.",
  "In terminal, you can view the {/str/}diff{/str_e/}erence between the file now and how it was at your last commit.": "In terminal, you can view the {/str/}diff{/str_e/}erence between the file now and how it was at your last commit.",
  "Tell Git to show you the {/str/}diff{/str_e/}:": "Tell Git to show you the {/str/}diff{/str_e/}:",
  "Now with what you just learned above, commit this latest change.": "Now with what you just learned above, commit this latest change.",
  "Check status of changes to a repository": "Check status of changes to a repository",
  "View changes to files": "View changes to files",
  "Add a file's changes to be committed": "Add a file's changes to be committed",
  "To add all files changes": "To add all files changes",
  "To commit (aka save) the changes you've added with a short message describing the changes": "To commit (aka save) the changes you've added with a short message describing the changes"
}
