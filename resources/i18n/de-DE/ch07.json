{
  "Add a branch, locally, to your forked repository to work on your changes.": "Füge lokal eine Verzweigung zu deinem abgespalteten Repository hinzu, um dort etwas zu verändern.",
  "Branches": "Branches",
  "Git repositories use branches to isolate work when needed. It's common practice when working on a project or with others on a project to create a {/str/}branch{/str_e/} to keep your working changes in. This way you can do your work while the main, commonly named 'master', branch stays stable. When the work on your branch is finished you merge it back into the 'master' master branch.": "Git Repositorys benutzen Branches (dt. Zweige) um Veränderungen zu isolieren, wenn dies nötig ist. Es ist übliche Praxis in gemeinsamen Projekten, Änderungen in einem eigenen {/str/}Branch{/str_e/} (Zweig) zu erstellen. Auf diese Weise können Änderungen getätigt und entwickelt werden, während der Hauptzweig (üblicherweiße 'master' genannt) stabil bleibt. Wenn die Arbeit im Nebenzweig dann stabil und beendet ist, wird der Nebenzweig wieder in den Hauptzweig eingefügt und seine Änderungen mit dem Hauptzweig verschmolzen (engl. merge).",
  "The diagram illustrates how you can branch off of your 'master' branch (the straight black line in the middle), do your work on a branch (dots illustrate commits) and then merge those changes back into 'master'. You can even branch off of a branch if you need to, the 'master' branch doesn't have to be the base.": "Das Diagramm illustriert das Abzweigen aus dem Hauptzweig (die gerade schwarze Linie in der Mitte), das Arbeiten auf dem Nebenzweig (Punkte illustrieren Commits) und das Einfügen der Änderungen zurück in den Hauptzweig. Es ist sogar möglich von einem Nebenzweig abzuzweigen, der Hauptzweig muss nicht unbedingt die Basis bilden.",
  "For a great visualization on how branches work in a project, see this GitHub Guide: {/lnk_guide/}guides.github.com/overviews/flow{/lnk_e/}": "Eine gute Visualisierung für die Funktion von Branches in einem Projekt ist im GitHub-Guide zu finden (engl.): {/lnk_guide/}guides.github.com/overviews/flow{/lnk_e/}",
  "GitHub Pages": "GitHub Webseiten",
  "GitHub will automatically serve and host static website files in branches named 'gh-pages'. This free service is called {/lnk_pages/}GitHub Pages{/lnk_e/}. Since the project you forked creates a website, its main branch is named 'gh-pages' instead of 'master'. All repositories that have a 'gh-pages' branch with website files can be found, live online, using this pattern for the URL:": "GitHub hostet automatisch statische Webseiten-Dateien, die in Branches mit dem Namen 'gh-pages' abgelegt sind. Dieser kostenlose Service ist als {/lnk_pages/}GitHub Pages{/lnk_e/} (dt. GitHub Seiten) bekannt. Da das in der letzen Aufgabe abgespaltete Projekt 'patchwork' eine Webseite erstellt, ist der Hauptzweig in diesem Projekt als 'gh-pages' benannt, anstatt 'master'. Alle Repositorys, die einen 'gh-pages'-Branch mit Webseiten-Dateien besitzen, sind online unter dem folgenden URL-Muster:",
  "Create a branch": "Erzeuge einen Branch",
  "When you create a branch, Git copies everything from the current branch you're on and places it in the branch you've requested be made.": "Wenn du einen neuen Branch erzeugst, kopiert Git automatisch alles aus dem aktuellen Branch und speichert es in dem neu erstellten Branch ab.",
  "While still inside of your local 'patchwork' repository, type {/cde/}git status{/cde_e/} to see what branch you're currently on. Git should reply that you're on the 'gh-pages' branch.": "Gib im Terminal - noch immer in deinem lokalen 'patchwork'-Repository - den Befehl {/cde/}git status{/cde_e/} ein, um zu sehen in welchem Branch Git aktuell arbeitet. Git sollte dir den Branch 'gh-pages' zurückgeben.",
  "Now create a new branch and name it {/add_branch/}, where 'username' is your username. For instance, {/add_jlord/}. {/str/}Branches are case-sensitive so name your branch exactly the way your GitHub name appears{/str_e/}.": "Erzeuge nun einen neuen Branch mit der Bezeichnung {/add_branch/}, wobei 'username' deinen eigenen GitHub-Nutzernamen darstellen soll (Bsp. {/add_jlord/}). {/str/}Achtung: Branches sind 'case-sensitive', das heißt Groß- und Kleinschreibung müssen unterschieden werden! Benenne deinen neuen Branch im Repository exakt nach deinem GitHub Nutzernamen!{/str_e/}",
  "Now you have a branch with a new name that is identical to 'gh-pages'.": "Jetzt existert in deinem Repository ein neuer Branch (mit neuem Namen), der inhaltlich dem Branch 'gh-pages' entspricht.",
  "To go into that branch and work on it you {/str/}checkout{/str_e/} a branch. Go on your new branch:": "Um in diesem neuen Branch zu arbeiten, musst du den Branch auswählen. In Git wird hierfür der Befehl {/str/}checkout{/str_e/} (dt. ausprobieren) verwendet. Wähle nun deinen neuen Branch aus:",
  "Step: Create a new file": "Nächster Schritt: Erstelle eine neue Datei",
  "Back in your text editor:": "Zurück im Text-Editor:",
  "Create a new file named {/filename_add/}, where 'username' is your username. For instance, {/filename_jlord/}.": "Erzeuge eine Datei mit dem Namen {/filename_add/}, worin 'username' wieder deinen GitHub-Nutzernamen bezeichnet. (Im bereits genannten Bsp.: {/filename_jlord/})",
  "Then, just write your GitHub username in it, that's it and that's all. For instance, I'd type 'jlord'.": "Als Inhalt der Textdatei schreibe einzig und alleine deinen GitHub-Nutzernamen in die Datei. (Im Bsp. 'jlord').",
  "Save this file in the 'contributors' folder in Patchwork: {/str/}{/filepath/}{/str_e/}": "Speichere diese Datei im Ordner 'contributors' (dt. Mitwirkende) im Patchwork-Verzeichnis ab: {/str/}{/filepath/}{/str_e/}",
  "Next, check in your changes (see below).": "Diese Änderungen kannst du nun im Repository sichern (siehe unten).",
  "Check-in": "Änderungen im Repository sichern",
  "Go through the steps for checking in a project: ": "Gehe durch die folgenden - dir schon bekannten - Befehle, um deine Änderungen am Projekt zu speichern:",
  "Now push your update to {/str/}your fork{/str_e/}, 'origin', on GitHub:": "Schiebe deine Aktualisierung in {/str/}dein abgezweigtes Repository (dein Fork){/str_e/} 'origin' bei GitHub:",
  "Permission denied...error: 403": "Permission denied...error: 403",
  "You are pushing changes to a repository you don't have write access to. In this case, you're likely pushing to the original 'jlord/patchwork'. Make sure that you're pushing to 'origin' and that it points to your fork's address on GitHub. To check and see what your remotes are and where they point run {/cde/}git remote -v{/cde_e/}. You should have 'upstream' pointing to 'jlord/patchwork' and 'origin' pointing to 'yourusername/patchwork'.": "'Permission denied' (dt. Zugriff verweigert) bezeichnet den Fehler, wenn du versuchst auf ein Repository zu schieben zu dem du keine Änderungs-Berechtigung besitzt. In unserem Fall versuchst du vermutlich auf das Original-Repository 'jlord/patchwork' zu schieben. Stelle sicher, dass du zum Remote 'origin' schiebst, und dass dieser Remote auf die Adresse deines abgespalteten Repository (deines Forks) bei GitHub zeigt. Um deine Remotes anzuschauen und zu überprüfen wohin diese zeigen, nutze den Befehl {/cde/}git remote -v{/cde_e/}. Du solltest hier den Remote 'upstream' sehen, der auf 'jlord/patchwork' zeigt, sowie den Remote 'origin', der auf '<DeinNutzerName>/patchwork' zeigt.",
  "To fix a remote that is pointing to the wrong place you can re-set its url: {/cde/}git remote set-url origin {/lt/}URLTOYOURFORK{/gt/}{/cde_e/}.": "Um den Fehler eines fehlgeleiteten Remotes zu beheben und den Zeiger des Remotes neu zu setzen nutze den folgenden Befehl: {/cde/}git remote set-url origin {/lt/}URL{/gt/}{/cde_e/}.",
  "Authentication failed...error: 401": "Authentication failed...error: 401",
  "Your identity could not be verified. You may have 2FA (Two Factor Authentication) turned on in which case you must use a personal access token as your password. You can generate one by {/lnk_instr/}following these instructions{/lnk_e/}. You'll need to keep this and use it in place of your password when prompted. You can also {/lnk_save/}save this access token{/lnk_e/} on your computer so that you don't have to re-enter it.": "'Authentication failed' (dt. Authentifizierung fehlgeschlagen) bezeichnet den Fehler, dass deine Identität nicht verifiziert werden konnte. Falls du die zwei-Faktor-Authentifizierung aktiviert hast (2FA - Two Factor Authentication), muss ein Access-Token als Passwort verwendet werden. Generiert werden kann dieser mit {/lnk_instr/}diesen Anweisungen in der GitHub Hilfe{/lnk_e/}. Dieser Access-Token fungiert dann als dein Passwort - bewahre ihn also gut auf! Du kannst den Access-Token auch {/lnk_save/}auf deinem Computer speichern{/lnk_e/}, damit du ihn nicht immer wieder eingeben musst.",
  "File NOT in contributors folder": "File NOT in contributors folder",
  "The file you create should be placed inside the existing 'contributors' folder in the Patchwork repository. If you put it somewhere else, simply use Finder or Windows Explorer to move your file into the folder. You can check {/cde/}git status{/cde_e/} again and you'll find it sees your changes. Stage and then commit all of these changes (additions and deletions) with the commands below.": "'File NOT in contributors folder' (dt. Datei nicht im Ordner 'contributors') - Die erstellte Datei sollte im 'contributors'-Verzeichnis in deinem Patchwork-Repository gespeichert sein. Solltest du sie an einem anderen Ort abgespeichert haben, benutze am besten die Suche und schiebe die Datei in das 'contributors'-Verzeichnis. Teste anschließend erneut den {/cde/}git status{/cde_e/} füge die Datei den Änderungen hinzu und übergib die Änderungen an die Historie:",
  "Branch name expected: _____": "Branch name expected: _____",
  "The branch name should match your user name exactly. To change your branch name:": "'Branch name expected: _____' (dt. Branch-Name erwartet:) Der Branch-Name sollte exakt deinem Nutzernamen entsprechen. Um den Branch-Namen zu ändern, nutze den Befehl:",
  "When you've made your updates, verify again!": "Wenn du dies aktualisiert hast, kannst du das Ergebnis erneut prüfen!",
  "You can create and switch to a branch in one line": "Du kannst einen Branch mit einem einzigen Kommando erzeugen und auswählen",
  "Create a new branch": "Erzeugen einen neuen Branch",
  "Move onto a branch": "Wähle einen Branch aus",
  "List the branches": "Liste die verfügbaren Branches auf",
  "Rename a branch you're currently on": "Benenne den aktuell ausgewählten Branch um",
  "Verify what branch you're working on": "Überprüfe auf welchem Branch du aktuell arbeitest"
}
