{
  "Create a new repository on your computer.": "내 컴퓨터에 새 저장소 만들기",
  "Repositories": "저장소란",
  "A {/str/}repository{/str_e/} is a collection of related items. In our case, when writing software, it is a collection of files related to a software project. You can imagine it as a project folder with all the relevant files inside of it. In fact, that's what it will look like on your computer anyways. Sometimes they're called 'repos' for short.": "{/str/}저장소{/str_e/}는 연관된 요소들의 집합입니다.  소프트웨어를 작성하는 입장에서 보면 소프트웨어 프로젝트에 연관된 파일들의 집합이라고 할 수 있습니다. 여러분은 이것을 관련 파일들이 포함된 프로젝트 폴더로 상상하셔도 무방합니다. 사실 컴퓨터의 입장에서는 이미 그렇게 보여지기 때문입니다. 영문으로는 'Repository' 로, 혹은 줄여서 'Repos' 로 부르기도 합니다.",
  "You tell Git what your project is and Git will start tracking all of the changes to that folder. This makes it a Git repository: a folder of items being tracked by Git. Git tracks when files are added, subtracted or even a single letter in a single file is changed. All of this plus who did it and when is tracked by Git. In software, tracking changes like this is called {/str/}version control{/str_e/}.": "Git에 프로젝트가 무엇인지 말해주면 Git은 그 폴더의 모든 변경을 기록하기 시작합니다. 이것 자체가 Git 저장소 입니다: 폴더의 아이템들이 Git 에 의해 추적되기 때문입니다. Git은 파일의 추가, 제거 혹은 심지어 한 파일의 한 글자의 수정까지도 기록합니다. 더해서 누가 변경했고 언제 변경했는지 까지도 Git에 의해 추적됩니다. 소프트웨어 세계에서 이러한 변경 트래킹은 {/str/}버전 컨트롤{/str_e/}이라 부릅니다.",
  "Using Terminal": "Terminal 사용하기",
  "{/str/}Terminal{/str_e/} (or Bash) is a way to instruct your computer to do things by typing commands rather than clicking applications with your mouse. You can rename files, open files, create new folders, move between directories (folders) and more all by running typed commands. You can even use a text editor for code (like {/lnk_vim/}Vim{/lnk_e/}) in your terminal an never have to leave!": "{/str/}Terminal{/str_e/} (혹은 Bash)는 마우스를 클릭해 앱을 실행하는 것 대신 명령어를 입력해 컴퓨터에게 일을 시키는 도구입니다. 여러분은 파일 이름 변경, 파일 열기, 새 폴더 만들기, 새 디렉토리(폴더)로 이동하기 등과 같이 다양한 일들을 커맨드로 실행할 수 있습니다.  여러분은 심지어 코드를 위한 텍스트 에디터(예를 들면 {/lnk_vim/}Vim{/lnk_e/})를 사용해 터미널만으로 개발을 할 수도 있습니다.",
  "Besides navigating your computer, you can also use programs in Terminal that have a {/str/}command-line interface (CLI){/str_e/}, meaning they can be run with commands in terminal. Git is one of these. The first part of the command lets your computer know you're talking to Git. The parts following that are the commands and the different options you want Git to act on.": "여러분은 Terminal 을 통해 {/str/}커맨드 라인 인터페이스 (CLI){/str_e/}가 있는 프로그램을 실행할 수 있습니다. 커맨드 라인 인터페이스는 Terminal 에서 명령어를 통해 사용할 수 있는 인터페이스를 의미합니다. Git 도 CLI 를 지원하는 어플리케이션 입니다. 명령어의 첫 부분은 컴퓨터에게 당신이 Git 에 말을 하고 있다는 것 을 알려주는 것 입니다. 그 뒤의 부분들은 여러분이 Git 이 작동하기 위한 명령어 및 옵션을 전달하는 내용 입니다.",
  "In Git-it you'll learn a few basic command-line actions (in addition to Git commands) for navigating your computer. They're described within the steps.": "Git-it 에서 여러분은 일부 기본적인 Terminal 명령어 (및 Git 명령어)들을 통해 컴퓨터 내부를 탐색하는 방법을 배울 것 입니다. 그 방법은 아래의 절차로 설명됩니다.",
  "Create a Repository": "Repository 생성",
  "You're going to create a new project folder and then initialize it as a Git repository. We'll name the folder 'hello-world' in this challenge, but you can choose a different name if you already have a folder named this (it's a common first project name).": "여러분은 새 프로젝트 폴더를 만들고 그것을 Git repository 로 초기화할 것 입니다. 우리는 이 도전 과제에서 폴더의 이름을 'hello-world' 로 정했지만 만약 같은 이름의 폴더 이름이 존재한다면 다른 이름을 사용하셔도 좋습니다 (흔한 첫 프로젝트 이름이기 때문입니다.)",
  "Time to open your terminal!": "Terminal을 열 시간입니다!",
  "In your terminal window, type these commands, one at a time, pressing enter/return after each.": "터미널 윈도우에서 아래의 명령어들을 한줄 입력하실 때 마다 enter 혹은 return 키를 입력해주세요.",
  "First, make a new folder:": "우선 새 폴더를 만듭니다.",
  "Tip: mkdir stands for {/em/}make directory{/em_e/}": "팁: mkdir 명령어는 {/em/}디렉토리 만들기{/em_e/}를 의미합니다.",
  "Then go into that folder:": "이제 그 폴더로 이동해주세요.",
  "Tip: cd stands for {/em/}change directory{/em_e/}": "팁: cd 명령어는 {/em/}디렉토리 변경{/em_e/}을 의미합니다.",
  "Finally, tell Git to initialize (start tracking) the folder you are now in:": "마지막으로, Git에 현재 위치의 폴더를 초기화 (혹은 추적 시작) 하도록 합니다:",
  "The last command should return something starting with 'Initialized empty Git repository'. The others commands do not return anything.": "마지막 명령어는 'Initialized empty Git repository'로 시작하는 응답을 할 것 입니다. 다른 명령어들은 아무것도 반환하지 않습니다.",
  "You did it! If you want to be double-sure that it's a Git repository, type {/cde/}git status{/cde_e/} and if it doesn't return 'fatal: Not a git repository...', you're golden!": "해냈습니다! 만약 현재 위치가 Git repository 인지 다시 확인하고 싶으시면 {/cde/}git status{/cde_e/} 를 입력해주세요. 만약 'fatal: Not a git repository...' 와 같은 응답이 나오지 않는다면 성공한 것 입니다!",
  "Make a new folder (aka make directory)": "새 폴더 만들기 (디렉토리 만들기)",
  "Navigate into an existing folder (aka change directory)": "존재하는 폴더로 이동하기 (디렉토리 이동하기)",
  "List the items in a folder": "폴더 내의 아이템들을 조회하기",
  "Turn Git on for a folder": "폴더에 Git 초기화 하기"
}
