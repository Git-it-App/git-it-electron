<div id="challenge-desc" class="box--border--blue box--goal">
    <p i18n-data="ch06~Fork a project from GitHub.com and clone it locally."></p>
</div>

<div class="box--solid--light">
    <h2 i18n-data="ch06~Forks"></h2>
    <p i18n-data="ch06~So far you have made a project locally and pushed it to GitHub, but that's only half the fun! The other half is working with other people and other projects."></p>

    <p i18n-type="standard_html"
        i18n-data="ch06~When you {/str/}fork{/str_e/} a repository, you're creating a copy of it on your GitHub account. Your forked copy begins its life as a {/str/}remote{/str_e/} repository â€” it exists just on your GitHub account, not on your computer. Forks are used for creating your own version of a project (this diversion from the original is like taking a fork in the road) or contributing back your changes (such as bug fixes or new features) to the original project."></p>

    <p i18n-type="standard_html"
        i18n-data="ch06~To get a forked repository from your GitHub account onto your computer you {/str/}clone{/str_e/} it. This cloning action copies the remote repository onto your computer so that you can work on it locally."></p>

    <img src="../../assets/imgs/clone.png"
         alt="A diagram showing a repository from GitHub copied onto your GitHub account and then copied onto your local computer from there.">
</div>

<div class="box--border--blue box--step">
    <h3 i18n-data="ch06~Fork the Patchwork Repository"></h3>
    <p i18n-type="standard_html"
        i18n-data="ch06~The project we'll work with is at {/lnk_patchwork/}github.com/jlord/patchwork{/lnk_e/}. Go to that page and click the 'Fork' button at the top right. Once the forking animation is complete, you have a copy on your account. Copy your fork's HTTP URL from the address bar in your browser, this is the address of your fork on GitHub's servers."
        i18n-options='{
            "lnk_patchwork": "https://github.com/jlord/patchwork"
        }'></p>
    <!-- TODO write address for user here -->
</div>

<div class="box--border--blue box--step">
    <h3 i18n-data="ch06~Clone Your Fork Locally"></h3>
    <p i18n-data="ch06~Now, in terminal, you'll clone the repository onto your computer. It will automatically create a new folder for the repository so there is no need to create one yourself. But make sure you aren't cloning it inside of another Git repository folder!"></p>

    <p i18n-data="ch06~So be sure you're not inside of the 'hello-world' directory from the previous challenges. To back out and leave this folder so that you can clone, follow these steps:"></p>

    <p><span i18n-data="ch06~Back out of your 'hello-world' folder:"></span></br>
        <span class="inline-tip" i18n-data="ch06~Tip: the two dots mean step out of a directory one level"></span>
    </p>
    <div class='code'><code class="shell">cd ..</code></div>

    <p i18n-data="ch06~Now that you're no longer in another Git repository, clone your fork:"></p>
    <div class='code'><code class="shell">git clone &#60;URLFROMGITHUB&#62;</code></div>

    <p i18n-data="ch06~Go into the folder it created for your local copy of the fork (in this case, named 'patchwork')."></p>
    <div class='code'><code class="shell">cd patchwork</code></div>

    <p i18n-type="standard_html"
        i18n-data="ch06~Now you've got a copy of the repository on your computer and it is automatically connected to the remote repository (your forked copy) on your GitHub account. Type {/cde/}git remote -v{/cde_e/} to see that the address to the fork is already set up."></p>
</div>

<div class="box--border--blue box--step">
    <h3 i18n-data="ch06~Connect to the Original Repository"></h3>

    <p i18n-type="standard_html"
        i18n-data="ch06~What if the original repository you forked happens to change? You'll want to be able to {/str/}pull{/str_e/} in those changes too. So let's add another remote connection, this time to the original, {/lnk_patchwork/}github.com/jlord/patchwork{/lnk_e/}, repository with its URL."
        i18n-options='{
            "lnk_patchwork": "https://github.com/jlord/patchwork"
        }'></p>

    <p i18n-data="ch06~You can name this remote connection anything you want, but typically people use the name 'upstream'{/smc/} let's use that for this."></p>

    <div class='code'><code class="shell">git remote add upstream https://github.com/jlord/patchwork.git</code></div>

    <p i18n-type="standard_html"
        i18n-data="ch06~To be sure you have the correct remotes set up, type {/cde/}git remote -v{/cde_e/} to list out the addresses you have stored. {/str/}You should have an 'origin' remote with your fork's address and then an 'upstream' remote with the address to the original, the URL noted above in this step.{/str_e/}"></p>
</div>

{{{ verify_directory_button }}}

<div class="box--border--grey box--tip">
    <ul class="no-list-style">
        <li>
            <strong i18n-data="ch06~Add a remote"></strong>
            <div class='code'><code class="shell">git remote add &#60;REMOTENAME&#62; &#60;URL&#62;</code></div>
        </li>
        <li>
            <strong i18n-data="ch06~Change a remote URL"></strong>
            <div class='code'><code class="shell">git remote set-url &#60;REMOTENAME&#62; &#60;URL&#62;</code></div>
        </li>
        <li>
            <strong i18n-data="ch06~View remote connections"></strong>
            <div class='code'><code class="shell">git remote -v</code></div>
        </li>
    </ul>
</div>
