<div id="challenge-desc" class="box--border--blue box--goal">
    <p i18n-data="ch07~Add a branch, locally, to your forked repository to work on your changes."></p>
</div>

<div class="box--solid--light">
    <h2 i18n-data="ch07~Branches"></h2>
    <p i18n-type="standard_html"
        i18n-data="ch07~Git repositories use branches to isolate work when needed. It's common practice when working on a project or with others on a project to create a {/str/}branch{/str_e/} to keep your working changes in. This way you can do your work while the main, commonly named 'master', branch stays stable. When the work on your branch is finished you merge it back into the 'master' master branch."></p>

    <p i18n-data="ch07~The diagram below shows how you can branch off of your 'master' branch, do work and then merge those changes back into 'master'. You can even branch off of a branch if you need to, the 'master' branch doesn't have to be the base."></p>

    <img src="../../assets/imgs/branches.png"
         alt="A diagram showing a horizontal line, representing the master branch, with another line branching off the top and later re-joining the original. Another line branches off the master branch line from below and yet another branch branches off of that. Both of these meet back up with the original master line, too."
         width="100%">

    <p i18n-type="standard_html"
        i18n-data="ch07~For a great visualization on how branches work in a project, see this GitHub Guide: {/lnk_guide/}guides.github.com/overviews/flow{/lnk_e/}"
        i18n-options='{
            "lnk_guide": "http://guides.github.com/overviews/flow/"
        }'></p>

    <h2 i18n-data="ch07~GitHub Pages"></h2>
    <p i18n-type="standard_html"
        i18n-data="ch07~GitHub will automatically serve and host static website files in branches named 'gh-pages'. This free service is called {/lnk_pages/}GitHub Pages{/lnk_e/}. Since the project you forked creates a website, its main branch is named 'gh-pages' instead of 'master'. All repositories that have a 'gh-pages' branch with website files can be found, live online, using this pattern for the URL:"
        i18n-options='{
            "lnk_pages": "http://pages.github.com"
        }'></p>
    <div class='code'><code>http://githubusername.github.io/repositoryname</code></div>
</div>

<div class="box--border--blue box--step">
    <h3 i18n-data="ch07~Create a branch"></h3>
    <p i18n-data="ch07~When you create a branch, Git copies everything from the current branch you're on and places it in the branch you've requested be made."></p>

    <p i18n-type="standard_html"
        i18n-data="ch07~While still inside of your local 'patchwork' repository, type {/cde/}git status{/cde_e/} to see what branch you're currently on. Git should reply that you're on the 'gh-pages' branch."></p>

    <p i18n-type="standard_html"
        i18n-data="ch07~Now create a new branch and name it {/add_branch/}, where 'username' is your username. For instance, {/add_jlord/}. {/str/}Branches are case-sensitive so name your branch exactly the way your GitHub name appears{/str_e/}."
        i18n-options='{
            "add_branch": "{/dqm/}add-username{/dqm/}",
            "add_jlord": "{/dqm/}add-jlord{/dqm/}"
        }'></p>

    <div class='code'><code class="shell">git branch &#60;BRANCHNAME&#62;</code></div>

    <p i18n-data="ch07~Now you have a branch with a new name that is identical to 'gh-pages'."></p>

    <p i18n-type="standard_html"
        i18n-data="ch07~To go into that branch and work on it you {/str/}checkout{/str_e/} a branch. Go on your new branch:"></p>

    <div class='code'><code class="shell">git checkout &#60;BRANCHNAME&#62;</code></div>
</div>

<div class="box--border--blue box--step">
    <h3 i18n-data="ch07~Step: Create a new file"></h3>
    <p i18n-data="ch07~Back in your text editor:"></p>
    <ul>
        <li i18n-data="ch07~Create a new file named {/filename_add/}, where 'username' is your username. For instance, {/filename_jlord/}."
            i18n-options='{
                "filename_add": "{/dqm/}add-username.txt{/dqm/}",
                "filename_jlord": "{/dqm/}add-jlord.txt{/dqm/}"
            }'></li>
        <li i18n-data="ch07~Then, just write your GitHub username in it, that's it and that's all. For instance, I'd type 'jlord'."></li>
        <li i18n-type="standard_html"
            i18n-data="ch07~Save this file in the 'contributors' folder in Patchwork: {/str/}{/filepath/}{/str_e/}"
            i18n-options='{
                "filepath": "Patchwork/contributors/add-username.txt"
            }'></li>
        <li i18n-data="ch07~Next, check in your changes (see below)."></li>
    </ul>
</div>

<div class="box--border--blue box--step">
    <h3 i18n-data="ch07~Check-in"></h3>
    <p i18n-data="ch07~Go through the steps for checking in a project: "></p>

    <div class='code'><code class="shell">git status</code></div>
    <div class='code'><code class="shell">git add &#60;contributors/FILENAME&#62;</code></div>
    <div class='code'><code class="shell">git commit -m "commit message"</code></div>

    <p i18n-type="standard_html"
        i18n-data="ch07~Now push your update to {/str/}your fork{/str_e/}, 'origin', on GitHub:"></p>
    <div class='code'><code class="shell">git push origin &#60;BRANCHNAME&#62;</code></div>
</div>

{{{ verify_directory_button }}}

<div class="box--border--grey box--fail">
    <h4 i18n-data="ch07~Permission denied...error: 403"></h4>
    <p i18n-type="standard_html"
        i18n-data="ch07~You are pushing changes to a repository you don't have write access to. In this case, you're likely pushing to the original 'jlord/patchwork'. Make sure that you're pushing to 'origin' and that it points to your fork's address on GitHub. To check and see what your remotes are and where they point run {/cde/}git remote -v{/cde_e/}. You should have 'upstream' pointing to 'jlord/patchwork' and 'origin' pointing to 'yourusername/patchwork'."></p>

    <p i18n-type="standard_html"
        i18n-data="ch07~To fix a remote that is pointing to the wrong place you can re-set its url: {/cde/}git remote set-url origin {/lt/}URLTOYOURFORK{/gt/}{/cde_e/}."></p>

    <h4 i18n-data="ch07~Authentication failed...error: 401"></h4>
    <p i18n-type="standard_html"
        i18n-data="ch07~Your identity could not be verified. You may have 2FA (Two Factor Authentication) turned on in which case you must use a personal access token as your password. You can generate one by {/lnk_instr/}following these instructions{/lnk_e/}. You'll need to keep this and use it in place of your password when prompted. You can also {/lnk_save/}save this access token{/lnk_e/} on your computer so that you don't have to re-enter it."
        i18n-options='{
            "lnk_instr": "https://help.github.com/articles/creating-an-access-token-for-command-line-use",
            "lnk_save": "https://help.github.com/articles/caching-your-github-password-in-git/"
        }'></p>

    <h4 i18n-data="ch07~File NOT in contributors folder"></h4>
    <p i18n-type="standard_html"
        i18n-data="ch07~The file you create should be placed inside the existing 'contributors' folder in the Patchwork repository. If you put it somewhere else, simply use Finder or Windows Explorer to move your file into the folder. You can check {/cde/}git status{/cde_e/} again and you'll find it sees your changes. Stage and then commit all of these changes (additions and deletions) with the commands below."></p>
    <div class='code'><code class="shell">git add -A</code></div>
    <div class='code'><code class="shell">git commit -m "move file into contributors folder"</code></div>

    <h4 i18n-data="ch07~Branch name expected: _____"></h4>
    <p i18n-data="ch07~The branch name should match your user name exactly. To change your branch name:"></p>
    <div class='code'><code class="shell">git branch -m &#60;NEWBRANCHNAME&#62;</code></div>
    <p i18n-data="ch07~When you've made your updates, verify again!"></p>
</div>

<div class="box--border--grey box--tip">
    <ul class="no-list-style">
        <li>
            <strong i18n-data="ch07~You can create and switch to a branch in one line"></strong>
            <div class='code'><code class="shell">git checkout -b &#60;BRANCHNAME&#62;</code></div>
        </li>
        <li>
            <strong i18n-data="ch07~Create a new branch"></strong>
            <div class='code'><code class="shell">git branch &#60;BRANCHNAME&#62;</code></div>
        </li>
        <li>
            <strong i18n-data="ch07~Move onto a branch"></strong>
            <div class='code'><code class="shell">git checkout &#60;BRANCHNAME&#62;</code></div>
        </li>
        <li>
            <strong i18n-data="ch07~List the branches"></strong>
            <div class='code'><code class="shell">git branch</code></div>
        </li>
        <li>
            <strong i18n-data="ch07~Rename a branch you're currently on"></strong>
            <div class='code'><code class="shell">git branch -m &#60;NEWBRANCHNAME&#62;</code></div>
        </li>
        <li>
            <strong i18n-data="ch07~Verify what branch you're working on"></strong>
            <div class='code'><code class="shell">git status</code></div>
        </li>
    </ul>
</div>
