{
  "Create a new repository on your computer.": "Create a new repository on your computer.",
  "Repositories": "Repositories",
  "A {/str/}repository{/str_e/} is a collection of related items. In our case, when writing software, it is a collection of files related to a software project. You can imagine it as a project folder with all the relevant files inside of it. In fact, that's what it will look like on your computer anyways. Sometimes they're called 'repos' for short.": "A {/str/}repository{/str_e/} is a collection of related items. In our case, when writing software, it is a collection of files related to a software project. You can imagine it as a project folder with all the relevant files inside of it. In fact, that's what it will look like on your computer anyways. Sometimes they're called 'repos' for short.",
  "You tell Git what your project is and Git will start tracking all of the changes to that folder. This makes it a Git repository: a folder of items being tracked by Git. Git tracks when files are added, subtracted or even a single letter in a single file is changed. All of this plus who did it and when is tracked by Git. In software, tracking changes like this is called {/str/}version control{/str_e/}.": "You tell Git what your project is and Git will start tracking all of the changes to that folder. This makes it a Git repository: a folder of items being tracked by Git. Git tracks when files are added, subtracted or even a single letter in a single file is changed. All of this plus who did it and when is tracked by Git. In software, tracking changes like this is called {/str/}version control{/str_e/}.",
  "Using Terminal": "Using Terminal",
  "{/str/}Terminal{/str_e/} (or Bash) is a way to instruct your computer to do things by typing commands rather than clicking applications with your mouse. You can rename files, open files, create new folders, move between directories (folders) and more all by running typed commands. You can even use a text editor for code (like {/lnk_vim/}Vim{/lnk_e/}) in your terminal an never have to leave!": "{/str/}Terminal{/str_e/} (or Bash) is a way to instruct your computer to do things by typing commands rather than clicking applications with your mouse. You can rename files, open files, create new folders, move between directories (folders) and more all by running typed commands. You can even use a text editor for code (like {/lnk_vim/}Vim{/lnk_e/}) in your terminal an never have to leave!",
  "Besides navigating your computer, you can also use programs in Terminal that have a {/str/}command-line interface (CLI){/str_e/}, meaning they can be run with commands in terminal. Git is one of these. The first part of the command lets your computer know you're talking to Git. The parts following that are the commands and the different options you want Git to act on.": "Besides navigating your computer, you can also use programs in Terminal that have a {/str/}command-line interface (CLI){/str_e/}, meaning they can be run with commands in terminal. Git is one of these. The first part of the command lets your computer know you're talking to Git. The parts following that are the commands and the different options you want Git to act on.",
  "In Git-it you'll learn a few basic command-line actions (in addition to Git commands) for navigating your computer. They're described within the steps.": "In Git-it you'll learn a few basic command-line actions (in addition to Git commands) for navigating your computer. They're described within the steps.",
  "Create a Repository": "Create a Repository",
  "You're going to create a new project folder and then initialize it as a Git repository. We'll name the folder 'hello-world' in this challenge, but you can choose a different name if you already have a folder named this (it's a common first project name).": "You're going to create a new project folder and then initialize it as a Git repository. We'll name the folder 'hello-world' in this challenge, but you can choose a different name if you already have a folder named this (it's a common first project name).",
  "Time to open your terminal!": "Time to open your terminal!",
  "In your terminal window, type these commands, one at a time, pressing enter/return after each.": "In your terminal window, type these commands, one at a time, pressing enter/return after each.",
  "First, make a new folder:": "First, make a new folder:",
  "Tip: mkdir stands for {/em/}make directory{/em_e/}": "Tip: mkdir stands for {/em/}make directory{/em_e/}",
  "Then go into that folder:": "Then go into that folder:",
  "Tip: cd stands for {/em/}change directory{/em_e/}": "Tip: cd stands for {/em/}change directory{/em_e/}",
  "Finally, tell Git to initialize (start tracking) the folder you are now in:": "Finally, tell Git to initialize (start tracking) the folder you are now in:",
  "The last command should return something starting with 'Initialized empty Git repository'. The others commands do not return anything.": "The last command should return something starting with 'Initialized empty Git repository'. The others commands do not return anything.",
  "You did it! If you want to be double-sure that it's a Git repository, type {/cde/}git status{/cde_e/} and if it doesn't return 'fatal: Not a git repository...', you're golden!": "You did it! If you want to be double-sure that it's a Git repository, type {/cde/}git status{/cde_e/} and if it doesn't return 'fatal: Not a git repository...', you're golden!",
  "Make a new folder (aka make directory)": "Make a new folder (aka make directory)",
  "Navigate into an existing folder (aka change directory)": "Navigate into an existing folder (aka change directory)",
  "List the items in a folder": "List the items in a folder",
  "Turn Git on for a folder": "Turn Git on for a folder"
}
